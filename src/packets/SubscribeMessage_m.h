//
// Generated file, do not edit! Created by opp_msgtool 6.1 from packets/SubscribeMessage.msg.
//

#ifndef __SUBSCRIBEMESSAGE_M_H
#define __SUBSCRIBEMESSAGE_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// opp_msgtool version check
#define MSGC_VERSION 0x0601
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgtool: 'make clean' should help.
#endif

class SubscribeMessage;
#include "PubSubMessage_m.h" // import PubSubMessage

/**
 * Class generated from <tt>packets/SubscribeMessage.msg:3</tt> by opp_msgtool.
 * <pre>
 * class SubscribeMessage extends PubSubMessage
 * {
 * }
 * </pre>
 */
class SubscribeMessage : public ::PubSubMessage
{
  protected:

  private:
    void copy(const SubscribeMessage& other);

  protected:
    bool operator==(const SubscribeMessage&) = delete;

  public:
    SubscribeMessage();
    SubscribeMessage(const SubscribeMessage& other);
    virtual ~SubscribeMessage();
    SubscribeMessage& operator=(const SubscribeMessage& other);
    virtual SubscribeMessage *dup() const override {return new SubscribeMessage(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const SubscribeMessage& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, SubscribeMessage& obj) {obj.parsimUnpack(b);}


namespace omnetpp {

template<> inline SubscribeMessage *fromAnyPtr(any_ptr ptr) { return check_and_cast<SubscribeMessage*>(ptr.get<cObject>()); }

}  // namespace omnetpp

#endif // ifndef __SUBSCRIBEMESSAGE_M_H

